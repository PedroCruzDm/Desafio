{"ast":null,"code":"export const useAdicionarEvento = () => {\n  const adicionarEvento = async ({\n    nome,\n    equipe,\n    status,\n    data_inicial,\n    // vem em datetime-local\n    cor,\n    descricao\n  }) => {\n    const evento = {\n      usuario_id: 1,\n      // você pode tornar isso dinâmico com login depois\n      nome,\n      equipe,\n      status,\n      data: data_inicial.split(\"T\")[0],\n      // pega só a parte da data (YYYY-MM-DD)\n      cor,\n      descricao\n    };\n    const response = await fetch(\"http://localhost:5000/api/eventos/cadastrar\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(evento)\n    });\n    if (!response.ok) {\n      const error = await response.text();\n      throw new Error(`Erro ao salvar evento: ${error}`);\n    }\n    return await response.json();\n  };\n  return {\n    adicionarEvento\n  };\n};","map":{"version":3,"names":["useAdicionarEvento","adicionarEvento","nome","equipe","status","data_inicial","cor","descricao","evento","usuario_id","data","split","response","fetch","method","headers","body","JSON","stringify","ok","error","text","Error","json"],"sources":["C:/Users/joaop/OneDrive/Documentos/atividades/desafios/Desafio1/frontend/src/hooks/Eventos/Add.js"],"sourcesContent":["export const useAdicionarEvento = () => {\r\n  const adicionarEvento = async ({\r\n    nome,\r\n    equipe,\r\n    status,\r\n    data_inicial, // vem em datetime-local\r\n    cor,\r\n    descricao\r\n  }) => {\r\n    const evento = {\r\n      usuario_id: 1, // você pode tornar isso dinâmico com login depois\r\n      nome,\r\n      equipe,\r\n      status,\r\n      data: data_inicial.split(\"T\")[0], // pega só a parte da data (YYYY-MM-DD)\r\n      cor,\r\n      descricao\r\n    };\r\n\r\n    const response = await fetch(\"http://localhost:5000/api/eventos/cadastrar\", {\r\n      method: \"POST\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify(evento)\r\n    });\r\n\r\n    if (!response.ok) {\r\n      const error = await response.text();\r\n      throw new Error(`Erro ao salvar evento: ${error}`);\r\n    }\r\n\r\n    return await response.json();\r\n  };\r\n\r\n  return { adicionarEvento };\r\n};\r\n"],"mappings":"AAAA,OAAO,MAAMA,kBAAkB,GAAGA,CAAA,KAAM;EACtC,MAAMC,eAAe,GAAG,MAAAA,CAAO;IAC7BC,IAAI;IACJC,MAAM;IACNC,MAAM;IACNC,YAAY;IAAE;IACdC,GAAG;IACHC;EACF,CAAC,KAAK;IACJ,MAAMC,MAAM,GAAG;MACbC,UAAU,EAAE,CAAC;MAAE;MACfP,IAAI;MACJC,MAAM;MACNC,MAAM;MACNM,IAAI,EAAEL,YAAY,CAACM,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;MAAE;MAClCL,GAAG;MACHC;IACF,CAAC;IAED,MAAMK,QAAQ,GAAG,MAAMC,KAAK,CAAC,6CAA6C,EAAE;MAC1EC,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QAAE,cAAc,EAAE;MAAmB,CAAC;MAC/CC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACV,MAAM;IAC7B,CAAC,CAAC;IAEF,IAAI,CAACI,QAAQ,CAACO,EAAE,EAAE;MAChB,MAAMC,KAAK,GAAG,MAAMR,QAAQ,CAACS,IAAI,CAAC,CAAC;MACnC,MAAM,IAAIC,KAAK,CAAC,0BAA0BF,KAAK,EAAE,CAAC;IACpD;IAEA,OAAO,MAAMR,QAAQ,CAACW,IAAI,CAAC,CAAC;EAC9B,CAAC;EAED,OAAO;IAAEtB;EAAgB,CAAC;AAC5B,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}