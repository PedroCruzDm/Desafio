{"ast":null,"code":"const handleSubmit = async e => {\n  e.preventDefault();\n  if (form.senha !== form.confirmacaoSenha) {\n    setMensagem(\"As senhas não conferem!\");\n    return;\n  }\n  try {\n    const response = await fetch(\"http://localhost:5001/api/usuarios\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        nome: form.nome,\n        email: form.email,\n        senha: form.senha,\n        fotoPerfil: form.fotoPerfil,\n        dataNascimento: form.dataNascimento\n      })\n    });\n    if (!response.ok) {\n      const errorData = await response.json();\n      setMensagem(`Erro: ${errorData.erro || \"Erro no cadastro\"}`);\n      return;\n    }\n    setMensagem(\"Cadastro realizado com sucesso!\");\n    setForm({\n      nome: \"\",\n      email: \"\",\n      fotoPerfil: \"\",\n      dataNascimento: \"\",\n      senha: \"\",\n      confirmacaoSenha: \"\"\n    });\n  } catch (error) {\n    setMensagem(\"Erro ao conectar com o servidor.\");\n  }\n};","map":{"version":3,"names":["handleSubmit","e","preventDefault","form","senha","confirmacaoSenha","setMensagem","response","fetch","method","headers","body","JSON","stringify","nome","email","fotoPerfil","dataNascimento","ok","errorData","json","erro","setForm","error"],"sources":["C:/Users/joaop/OneDrive/Documentos/atividades/desafios/Desafio1/frontend/src/pages/cadastro.jsx"],"sourcesContent":["const handleSubmit = async (e) => {\r\n  e.preventDefault();\r\n\r\n  if (form.senha !== form.confirmacaoSenha) {\r\n    setMensagem(\"As senhas não conferem!\");\r\n    return;\r\n  }\r\n\r\n  try {\r\n    const response = await fetch(\"http://localhost:5001/api/usuarios\", {\r\n      method: \"POST\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify({\r\n        nome: form.nome,\r\n        email: form.email,\r\n        senha: form.senha,\r\n        fotoPerfil: form.fotoPerfil,\r\n        dataNascimento: form.dataNascimento,\r\n      }),\r\n    });\r\n\r\n    if (!response.ok) {\r\n      const errorData = await response.json();\r\n      setMensagem(`Erro: ${errorData.erro || \"Erro no cadastro\"}`);\r\n      return;\r\n    }\r\n\r\n    setMensagem(\"Cadastro realizado com sucesso!\");\r\n    setForm({\r\n      nome: \"\",\r\n      email: \"\",\r\n      fotoPerfil: \"\",\r\n      dataNascimento: \"\",\r\n      senha: \"\",\r\n      confirmacaoSenha: \"\",\r\n    });\r\n  } catch (error) {\r\n    setMensagem(\"Erro ao conectar com o servidor.\");\r\n  }\r\n};\r\n"],"mappings":"AAAA,MAAMA,YAAY,GAAG,MAAOC,CAAC,IAAK;EAChCA,CAAC,CAACC,cAAc,CAAC,CAAC;EAElB,IAAIC,IAAI,CAACC,KAAK,KAAKD,IAAI,CAACE,gBAAgB,EAAE;IACxCC,WAAW,CAAC,yBAAyB,CAAC;IACtC;EACF;EAEA,IAAI;IACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,oCAAoC,EAAE;MACjEC,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QAAE,cAAc,EAAE;MAAmB,CAAC;MAC/CC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;QACnBC,IAAI,EAAEX,IAAI,CAACW,IAAI;QACfC,KAAK,EAAEZ,IAAI,CAACY,KAAK;QACjBX,KAAK,EAAED,IAAI,CAACC,KAAK;QACjBY,UAAU,EAAEb,IAAI,CAACa,UAAU;QAC3BC,cAAc,EAAEd,IAAI,CAACc;MACvB,CAAC;IACH,CAAC,CAAC;IAEF,IAAI,CAACV,QAAQ,CAACW,EAAE,EAAE;MAChB,MAAMC,SAAS,GAAG,MAAMZ,QAAQ,CAACa,IAAI,CAAC,CAAC;MACvCd,WAAW,CAAC,SAASa,SAAS,CAACE,IAAI,IAAI,kBAAkB,EAAE,CAAC;MAC5D;IACF;IAEAf,WAAW,CAAC,iCAAiC,CAAC;IAC9CgB,OAAO,CAAC;MACNR,IAAI,EAAE,EAAE;MACRC,KAAK,EAAE,EAAE;MACTC,UAAU,EAAE,EAAE;MACdC,cAAc,EAAE,EAAE;MAClBb,KAAK,EAAE,EAAE;MACTC,gBAAgB,EAAE;IACpB,CAAC,CAAC;EACJ,CAAC,CAAC,OAAOkB,KAAK,EAAE;IACdjB,WAAW,CAAC,kCAAkC,CAAC;EACjD;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}