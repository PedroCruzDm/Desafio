{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\joaop\\\\OneDrive\\\\Documentos\\\\atividades\\\\desafios\\\\Desafio1\\\\frontend\\\\src\\\\pages\\\\login.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Login = () => {\n  _s();\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const handleSubmit = async e => {\n    e.preventDefault();\n    try {\n      const response = await fetch(\"http://localhost:5000/api/usuarios/login\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          email,\n          senha: password\n        })\n      });\n      const data = await response.json();\n      if (!response.ok) {\n        alert(data.erro || \"Erro no login\");\n        return;\n      }\n      alert(`Bem-vindo, ${data.usuario.nome}`);\n      // Salva o token de autenticação no localStorage\n      localStorage.setItem(\"token\", data.token);\n      // Redireciona para o dashboard\n      window.location.href = \"/dashboard\";\n    } catch (error) {\n      console.error(\"Erro na requisição:\", error);\n      alert(\"Erro ao conectar com o servidor\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    style: {\n      maxWidth: 300,\n      margin: \"0 auto\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Email:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"email\",\n        value: email,\n        onChange: e => setEmail(e.target.value),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Senha:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        value: password,\n        onChange: e => setPassword(e.target.value),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      children: \"Entrar\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 9\n  }, this);\n};\n_s(Login, \"3B3pqDcVnkT+z/sPK6Z9zQsLP+s=\");\n_c = Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Login","_s","email","setEmail","password","setPassword","handleSubmit","e","preventDefault","response","fetch","method","headers","body","JSON","stringify","senha","data","json","ok","alert","erro","usuario","nome","localStorage","setItem","token","window","location","href","error","console","onSubmit","style","maxWidth","margin","children","fileName","_jsxFileName","lineNumber","columnNumber","type","value","onChange","target","required","_c","$RefreshReg$"],"sources":["C:/Users/joaop/OneDrive/Documentos/atividades/desafios/Desafio1/frontend/src/pages/login.jsx"],"sourcesContent":["import React, { useState } from \"react\";\r\n\r\nexport const Login = () => {\r\n    const [email, setEmail] = useState(\"\");\r\n    const [password, setPassword] = useState(\"\");\r\n\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault();\r\n\r\n        try {\r\n            const response = await fetch(\"http://localhost:5000/api/usuarios/login\", {\r\n                method: \"POST\",\r\n                headers: {\r\n                    \"Content-Type\": \"application/json\"\r\n                },\r\n                body: JSON.stringify({ email, senha: password })\r\n            });\r\n\r\n            const data = await response.json();\r\n\r\n            if (!response.ok) {\r\n                alert(data.erro || \"Erro no login\");\r\n                return;\r\n            }\r\n\r\n            alert(`Bem-vindo, ${data.usuario.nome}`);\r\n            // Salva o token de autenticação no localStorage\r\n            localStorage.setItem(\"token\", data.token);\r\n            // Redireciona para o dashboard\r\n            window.location.href = \"/dashboard\";\r\n\r\n        } catch (error) {\r\n            console.error(\"Erro na requisição:\", error);\r\n            alert(\"Erro ao conectar com o servidor\");\r\n        }\r\n    };\r\n\r\n    return (\r\n        <form onSubmit={handleSubmit} style={{ maxWidth: 300, margin: \"0 auto\" }}>\r\n            <h2>Login</h2>\r\n            <div>\r\n                <label>Email:</label>\r\n                <input\r\n                    type=\"email\"\r\n                    value={email}\r\n                    onChange={e => setEmail(e.target.value)}\r\n                    required\r\n                />\r\n            </div>\r\n            <div>\r\n                <label>Senha:</label>\r\n                <input\r\n                    type=\"password\"\r\n                    value={password}\r\n                    onChange={e => setPassword(e.target.value)}\r\n                    required\r\n                />\r\n            </div>\r\n            <button type=\"submit\">Entrar</button>\r\n        </form>\r\n    );\r\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}