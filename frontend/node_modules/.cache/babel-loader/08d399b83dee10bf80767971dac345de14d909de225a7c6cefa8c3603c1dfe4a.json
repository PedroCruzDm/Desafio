{"ast":null,"code":"export const useAdicionarEvento = () => {\n  const adicionarEvento = async ({\n    nome,\n    equipe,\n    status,\n    data,\n    cor,\n    descricao,\n    criador\n  }) => {\n    const evento = {\n      nome,\n      equipe,\n      status,\n      data_ini,\n      cor,\n      descricao,\n      criador,\n      criadoEm: new Date().toISOString(),\n      atualizadoEm: new Date().toISOString()\n    };\n    const response = await fetch(\"http://localhost:5000/eventos/create\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(evento)\n    });\n    if (!response.ok) {\n      const error = await response.text();\n      throw new Error(`Erro ao salvar evento: ${error}`);\n    }\n    const savedEvent = await response.json();\n    return savedEvent;\n  };\n  return {\n    adicionarEvento\n  };\n};","map":{"version":3,"names":["useAdicionarEvento","adicionarEvento","nome","equipe","status","data","cor","descricao","criador","evento","data_ini","criadoEm","Date","toISOString","atualizadoEm","response","fetch","method","headers","body","JSON","stringify","ok","error","text","Error","savedEvent","json"],"sources":["C:/Users/joaop/OneDrive/Documentos/atividades/desafios/Desafio1/frontend/src/hooks/Eventos/Add.js"],"sourcesContent":["export const useAdicionarEvento = () => {\r\n    const adicionarEvento = async ({ nome, equipe, status, data, cor, descricao, criador }) => {\r\n        const evento = {\r\n            nome,\r\n            equipe,\r\n            status,\r\n            data_ini,\r\n            cor,\r\n            descricao,\r\n            criador,\r\n            criadoEm: new Date().toISOString(),\r\n            atualizadoEm: new Date().toISOString(),\r\n        };\r\n\r\n        const response = await fetch(\"http://localhost:5000/eventos/create\", {\r\n            method: \"POST\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\"\r\n            },\r\n            body: JSON.stringify(evento)\r\n        });\r\n\r\n        if (!response.ok) {\r\n            const error = await response.text();\r\n            throw new Error(`Erro ao salvar evento: ${error}`);\r\n        }\r\n\r\n        const savedEvent = await response.json();\r\n        return savedEvent;\r\n    };\r\n\r\n    return { adicionarEvento };\r\n};\r\n"],"mappings":"AAAA,OAAO,MAAMA,kBAAkB,GAAGA,CAAA,KAAM;EACpC,MAAMC,eAAe,GAAG,MAAAA,CAAO;IAAEC,IAAI;IAAEC,MAAM;IAAEC,MAAM;IAAEC,IAAI;IAAEC,GAAG;IAAEC,SAAS;IAAEC;EAAQ,CAAC,KAAK;IACvF,MAAMC,MAAM,GAAG;MACXP,IAAI;MACJC,MAAM;MACNC,MAAM;MACNM,QAAQ;MACRJ,GAAG;MACHC,SAAS;MACTC,OAAO;MACPG,QAAQ,EAAE,IAAIC,IAAI,CAAC,CAAC,CAACC,WAAW,CAAC,CAAC;MAClCC,YAAY,EAAE,IAAIF,IAAI,CAAC,CAAC,CAACC,WAAW,CAAC;IACzC,CAAC;IAED,MAAME,QAAQ,GAAG,MAAMC,KAAK,CAAC,sCAAsC,EAAE;MACjEC,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QACL,cAAc,EAAE;MACpB,CAAC;MACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACZ,MAAM;IAC/B,CAAC,CAAC;IAEF,IAAI,CAACM,QAAQ,CAACO,EAAE,EAAE;MACd,MAAMC,KAAK,GAAG,MAAMR,QAAQ,CAACS,IAAI,CAAC,CAAC;MACnC,MAAM,IAAIC,KAAK,CAAC,0BAA0BF,KAAK,EAAE,CAAC;IACtD;IAEA,MAAMG,UAAU,GAAG,MAAMX,QAAQ,CAACY,IAAI,CAAC,CAAC;IACxC,OAAOD,UAAU;EACrB,CAAC;EAED,OAAO;IAAEzB;EAAgB,CAAC;AAC9B,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}