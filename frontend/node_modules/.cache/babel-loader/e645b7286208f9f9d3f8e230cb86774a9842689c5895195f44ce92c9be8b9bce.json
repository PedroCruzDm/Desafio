{"ast":null,"code":"import axios from 'axios';\nconst API_URL = 'http://localhost:3001/equipes';\n\n// Configuração global do axios para debug\naxios.interceptors.request.use(config => {\n  console.log(`Fazendo requisição para: ${config.url}`);\n  return config;\n}, error => {\n  console.error('Erro na requisição:', error);\n  return Promise.reject(error);\n});\nexport const getEquipes = async () => {\n  try {\n    console.log('Buscando todas as equipes...');\n    const response = await axios.get(API_URL);\n    console.log('Resposta recebida:', response.data);\n    return response.data;\n  } catch (error) {\n    console.error('Erro ao buscar equipes:', error.response ? error.response.data : error.message);\n    throw error;\n  }\n};\nexport const getEquipe = async id => {\n  try {\n    const response = await axios.get(`${API_URL}/${id}`);\n    return response.data;\n  } catch (error) {\n    console.error(`Erro ao buscar equipe ${id}:`, error.response ? error.response.data : error.message);\n    throw error;\n  }\n};\nexport const createEquipe = async equipe => {\n  try {\n    console.log('Criando equipe com dados:', equipe);\n    const response = await axios.post(API_URL, equipe);\n    console.log('Equipe criada:', response.data);\n    return response.data;\n  } catch (error) {\n    console.error('Erro ao criar equipe:', error.response ? error.response.data : error.message);\n    throw error;\n  }\n};\nexport const updateEquipe = async (id, equipe) => {\n  try {\n    console.log(`Atualizando equipe ${id} com dados:`, equipe);\n    const response = await axios.put(`${API_URL}/${id}`, equipe);\n    console.log('Equipe atualizada:', response.data);\n    return response.data;\n  } catch (error) {\n    console.error(`Erro ao atualizar equipe ${id}:`, error.response ? error.response.data : error.message);\n    throw error;\n  }\n};\nexport const deleteEquipe = async id => {\n  try {\n    console.log(`Excluindo equipe ${id}...`);\n    const response = await axios.delete(`${API_URL}/${id}`);\n    console.log('Resposta da exclusão:', response.data);\n    return response.data;\n  } catch (error) {\n    console.error(`Erro ao excluir equipe ${id}:`, error.response ? error.response.data : error.message);\n    throw error;\n  }\n};\n\n// Função para testar a conexão com o backend\nexport const testConnection = async () => {\n  try {\n    const response = await axios.get(`${API_URL}/test`);\n    console.log('Teste de conexão:', response.data);\n    return true;\n  } catch (error) {\n    console.error('Erro no teste de conexão:', error.response ? error.response.data : error.message);\n    return false;\n  }\n};","map":{"version":3,"names":["axios","API_URL","interceptors","request","use","config","console","log","url","error","Promise","reject","getEquipes","response","get","data","message","getEquipe","id","createEquipe","equipe","post","updateEquipe","put","deleteEquipe","delete","testConnection"],"sources":["C:/Users/joaop/OneDrive/Documentos/atividades/desafios/Desafio1/frontend/src/services/equipeService.js"],"sourcesContent":["import axios from 'axios';\r\n\r\nconst API_URL = 'http://localhost:3001/equipes';\r\n\r\n// Configuração global do axios para debug\r\naxios.interceptors.request.use(\r\n  (config) => {\r\n    console.log(`Fazendo requisição para: ${config.url}`);\r\n    return config;\r\n  },\r\n  (error) => {\r\n    console.error('Erro na requisição:', error);\r\n    return Promise.reject(error);\r\n  }\r\n);\r\n\r\nexport const getEquipes = async () => {\r\n  try {\r\n    console.log('Buscando todas as equipes...');\r\n    const response = await axios.get(API_URL);\r\n    console.log('Resposta recebida:', response.data);\r\n    return response.data;\r\n  } catch (error) {\r\n    console.error(\r\n      'Erro ao buscar equipes:',\r\n      error.response ? error.response.data : error.message\r\n    );\r\n    throw error;\r\n  }\r\n};\r\n\r\nexport const getEquipe = async (id) => {\r\n  try {\r\n    const response = await axios.get(`${API_URL}/${id}`);\r\n    return response.data;\r\n  } catch (error) {\r\n    console.error(\r\n      `Erro ao buscar equipe ${id}:`,\r\n      error.response ? error.response.data : error.message\r\n    );\r\n    throw error;\r\n  }\r\n};\r\n\r\nexport const createEquipe = async (equipe) => {\r\n  try {\r\n    console.log('Criando equipe com dados:', equipe);\r\n    const response = await axios.post(API_URL, equipe);\r\n    console.log('Equipe criada:', response.data);\r\n    return response.data;\r\n  } catch (error) {\r\n    console.error(\r\n      'Erro ao criar equipe:',\r\n      error.response ? error.response.data : error.message\r\n    );\r\n    throw error;\r\n  }\r\n};\r\n\r\nexport const updateEquipe = async (id, equipe) => {\r\n  try {\r\n    console.log(`Atualizando equipe ${id} com dados:`, equipe);\r\n    const response = await axios.put(`${API_URL}/${id}`, equipe);\r\n    console.log('Equipe atualizada:', response.data);\r\n    return response.data;\r\n  } catch (error) {\r\n    console.error(\r\n      `Erro ao atualizar equipe ${id}:`,\r\n      error.response ? error.response.data : error.message\r\n    );\r\n    throw error;\r\n  }\r\n};\r\n\r\nexport const deleteEquipe = async (id) => {\r\n  try {\r\n    console.log(`Excluindo equipe ${id}...`);\r\n    const response = await axios.delete(`${API_URL}/${id}`);\r\n    console.log('Resposta da exclusão:', response.data);\r\n    return response.data;\r\n  } catch (error) {\r\n    console.error(\r\n      `Erro ao excluir equipe ${id}:`,\r\n      error.response ? error.response.data : error.message\r\n    );\r\n    throw error;\r\n  }\r\n};\r\n\r\n// Função para testar a conexão com o backend\r\nexport const testConnection = async () => {\r\n  try {\r\n    const response = await axios.get(`${API_URL}/test`);\r\n    console.log('Teste de conexão:', response.data);\r\n    return true;\r\n  } catch (error) {\r\n    console.error(\r\n      'Erro no teste de conexão:',\r\n      error.response ? error.response.data : error.message\r\n    );\r\n    return false;\r\n  }\r\n};\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}